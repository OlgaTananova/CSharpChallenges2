// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderProcessing.Core.Data;

#nullable disable

namespace OrderProcessing.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250317230422_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderProcessing.Core.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alice"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jack"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Natalie"
                        },
                        new
                        {
                            Id = 5,
                            Name = "John"
                        });
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PreferredCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            IsPaid = true,
                            OrderDate = new DateTime(2025, 3, 12, 23, 4, 22, 378, DateTimeKind.Utc).AddTicks(3388),
                            PreferredCurrency = "USD",
                            Status = 1,
                            Total = 0m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            IsPaid = true,
                            OrderDate = new DateTime(2025, 3, 7, 23, 4, 22, 378, DateTimeKind.Utc).AddTicks(3398),
                            PreferredCurrency = "USD",
                            Status = 1,
                            Total = 0m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            IsPaid = false,
                            OrderDate = new DateTime(2025, 3, 16, 23, 4, 22, 378, DateTimeKind.Utc).AddTicks(3400),
                            PreferredCurrency = "USD",
                            Status = 1,
                            Total = 0m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            IsPaid = false,
                            OrderDate = new DateTime(2025, 3, 14, 23, 4, 22, 378, DateTimeKind.Utc).AddTicks(3401),
                            PreferredCurrency = "USD",
                            Status = 1,
                            Total = 0m
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            IsPaid = false,
                            OrderDate = new DateTime(2025, 3, 17, 23, 4, 22, 378, DateTimeKind.Utc).AddTicks(3402),
                            PreferredCurrency = "USD",
                            Status = 1,
                            Total = 0m
                        });
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 1200m,
                            ProductId = 1,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            Price = 700m,
                            ProductId = 2,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 2,
                            Price = 800m,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 3,
                            Price = 1200m,
                            ProductId = 1,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 4,
                            Price = 50m,
                            ProductId = 4,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 5,
                            Price = 800m,
                            ProductId = 3,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProductName")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 1200m,
                            ProductName = "Laptop",
                            Stock = 100
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 700m,
                            ProductName = "Tablet",
                            Stock = 80
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 800m,
                            ProductName = "Display",
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 50m,
                            ProductName = "Mouse",
                            Stock = 40
                        });
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.Order", b =>
                {
                    b.HasOne("OrderProcessing.Core.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.OrderItem", b =>
                {
                    b.HasOne("OrderProcessing.Core.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderProcessing.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderProcessing.Core.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
